This library is intended to read buttons.

Its based on polling the pins as often as possible. Further d√©veloppment may lead to interrupt based polling.

Simply import it in your Arduino Sketch, call begin() in the setup by passing the pin the button is plugged on, and call update on each loop. Other side of the button has to be plugged on ground, as the input pin is pulled up.

It provides some usefull functions for button reading.
begin(int pin) start a new button, on the given pin. It default to INPUT_PULLUP. Call it during setup.

setDebouncedDelay() is used to set the delay for debounce. If not called it will default to 5 ms.
setLongDelay() is used to set the delay for long presses. If not called it will default to 1s.

update() is used for polling the button state. Call it on every loop.

isPressed() returns true if button is being pressed.
isReleased() ditto not being pressed.
isLongPressed() returns true is button is being pressed for longer than the delay specified with long delay.
isLongReleased() ditto not being pressed.

justPressed() returns true is the button is pressed and has not been read since it changed state. returns false once read, until the button is presed again.
justReleased() do the same for button released.

In addition, there is a PushButtonGroup class that just keeps a table of all the buttons sets, and can update all readings at once.

addButton(&button) adds the button to the group.
removeButton(&button) removes the button from the group.

update() to exactly the same than for on button, but for all the buttons listed in the group. It returns true if a button or more have changed state.

You may as well create several groups of buttons that have to be read together.


Your free to use this library for wathever project your working on.
